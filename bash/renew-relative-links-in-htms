#! /bin/bash

file_name=$1
old_link_name=$2
new_link_name=$3
help_file_project_path="/mnt/c/SVN/Echoview13/Documentation/Help_file/"


if [[ -z "$new_link_name" ]]; then

    echo "# Use renew-relative-links-in-htms to update all instances of"
    echo "# the relative link names that appear in the .htms after"
    echo "# you rename a relative link."
    echo "#"
    echo "# Insert the -i flag for sed. It has been disabled for"
    echo "# safety."
    echo "#"
    echo "# Usage"
    echo "#"
    echo "#    -->$ renew-relative-links-in-htms file_name_with_source_relative_link.htm old_link_name new_link_name"
    exit
fi


grep_for_htms_with_old_link_name(){
    local file_name=$1
    local old_link_name=$2

    file_with_old_link_name=$(generate_file_link_name "$file_name" "$old_link_name")
    grep -lir "$file_with_old_link_name"
}


generate_file_link_name(){
    local file_name=$1
    local link_name=$2

    find_file=$(find . -type f -iname "$file_name")
    get_file_name=$(basename "$find_file")
    echo "$get_file_name"\#"$link_name"
}


replace_link_name_in_htms(){
    local file_name=$1
    local old_link_name=$2
    local new_link_name=$3
    local htm_paths=$4

    old_file_link=$(generate_file_link_name "$file_name" "$old_link_name")
    new_file_link=$(generate_file_link_name "$file_name" "$new_link_name")

    while read -r htm_path; do
        sed "s/$old_file_link/$new_file_link/Ig" "$htm_path"
    done< <(echo "$htm_paths")
}


main(){
    cd "$help_file_project_path"
    htms_with_old_link_name=$(grep_for_htms_with_old_link_name "$file_name" "$old_link_name")
    replace_link_name_in_htms "$file_name" "$old_link_name" "$new_link_name" "$htms_with_old_link_name"
}


if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main
fi
